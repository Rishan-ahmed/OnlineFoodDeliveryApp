import {CREATE_RESTAURANT_REQUEST,
    CREATE_RESTAURANT_SUCCESS,
    CREATE_RESTAURANT_FAILURE,
    GET_ALL_RESTAURANTS_REQUEST,
    GET_ALL_RESTAURANTS_SUCCESS,
    GET_ALL_RESTAURANTS_FAILURE,
    DELETE_RESTAURANT_REQUEST,
    DELETE_RESTAURANT_SUCCESS,
    DELETE_RESTAURANT_FAILURE,
    UPDATE_RESTAURANT_REQUEST,
    UPDATE_RESTAURANT_SUCCESS,
    UPDATE_RESTAURANT_FAILURE,
    GET_RESTAURANT_BY_ID_REQUEST,
    GET_RESTAURANT_BY_ID_SUCCESS,
    GET_RESTAURANT_BY_ID_FAILURE,
    GET_RESTAURANT_BY_USER_ID_REQUEST,
GET_RESTAURANT_BY_USER_ID_SUCCESS,
GET_RESTAURANT_BY_USER_ID_FAILURE,
UPDATE_RESTAURANT_STATUS_REQUEST,
UPDATE_RESTAURANT_STATUS_SUCCESS,
UPDATE_RESTAURANT_STATUS_FAILURE,
CREATE_EVENTS_REQUEST,
CREATE_EVENTS_SUCCESS,
CREATE_EVENTS_FAILURE,
GET_ALL_EVENTS_REQUEST,
GET_ALL_EVENTS_SUCCESS,
GET_ALL_EVENTS_FAILURE,
DELETE_EVENTS_REQUEST,
DELETE_EVENTS_SUCCESS,
DELETE_EVENTS_FAILURE,
GET_RESTAIRANTS_EVENTS_REQUEST,
GET_RESTAIRANTS_EVENTS_SUCCESS,
GET_RESTAIRANTS_EVENTS_FAILURE,
CREATE_CATEGORY_REQUEST,
CREATE_CATEGORY_SUCCESS,
CREATE_CATEGORY_FAILURE,
GET_RESTAURANTS_CATEGORY_REQUEST,
GET_RESTAURANTS_CATEGORY_SUCCESS,
GET_RESTAURANTS_CATEGORY_FAILURE,

} from "./ActionType"

const initialState ={
    restaurant: [],
    isLoading: false,
    error: null, 
    jwt: null,
    favorite: [],
    success: null
}

export const RestaurantReducers = (state = initialState, action) =>{
    switch(action.type){
        case GET_ALL_RESTAURANTS_REQUEST:
        return{...state, isLoading: true, error:null, success:null, restaurant:[]};

        case GET_ALL_RESTAURANTS_SUCCESS:
        return{...state, isLoading: false, error:null, success:"Restaurent Retrived", restaurant:action.payload};

        case GET_ALL_RESTAURANTS_FAILURE:
            return {
                ...state,
                isLoading: false,
                error: action.payload,
                success: null
            };

        default:
            return state;
    }}